{
    "$schema": "https://raw.githubusercontent.com/Azure/review-checklists/main/checklists/checklist.schema.json",
    "items": [
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Control pod scheduling using node selectors and affinity.",
            "description": "Allows the Kubernetes scheduler to logically isolate workloads by hardware in the node. Unlike tolerations, pods without a matching node selector can be scheduled on labeled nodes, which allows unused resources on the nodes to consume, but gives priority to pods that define the matching node selector. Use node affinity for more flexibility, which allows you to define what happens if the pod can't be matched with a node.",
            "type": "recommendation",
            "guid": "97e853ae-0f0c-4af9-9efd-bd97419c00e0"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Ensure proper selection of network plugin based on network requirements and cluster sizing.",
            "description": "Azure CNI is required for specific scenarios, for example, Windows-based node pools, specific networking requirements and Kubernetes Network Policies. Reference Kubenet versus Azure CNI for more information.",
            "type": "recommendation",
            "guid": "5c5d171c-e58a-430d-a2cc-38b46f773646"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Use the AKS Uptime SLA for production grade clusters.",
            "description": "The AKS Uptime SLA guarantees: - `99.95%` availability of the Kubernetes API server endpoint for AKS Clusters that use Azure Availability Zones, or  - `99.9%` availability for AKS Clusters that don't use Azure Availability Zones.",
            "type": "recommendation",
            "guid": "5a34db1f-70ba-41df-89ff-8dcac4e78fd9"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Configure monitoring of cluster with Container insights.",
            "description": "Container insights help monitor the health and performance of controllers, nodes, and containers that are available in Kubernetes through the Metrics API. Integration with Prometheus enables collection of application and workload metrics.",
            "type": "recommendation",
            "guid": "685d2330-e8f1-4201-bc45-fd74617cc28b"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Use availability zones to maximize resilience within an Azure region by distributing AKS agent nodes across physically separate data centers.",
            "description": "By spreading node pools across multiple zones, nodes in one node pool will continue running even if another zone has gone down. If colocality requirements exist, either a regular VMSS-based AKS deployment into a single zone or proximity placement groups can be used to minimize internode latency.",
            "type": "recommendation",
            "guid": "0d5115bc-7fbb-4fdb-a645-fee3c75d91a4"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Adopt a multiregion strategy by deploying AKS clusters deployed across different Azure regions to maximize availability and provide business continuity.",
            "description": "Internet facing workloads should leverage Azure Front Door or Azure Traffic Manager to route traffic globally across AKS clusters.",
            "type": "recommendation",
            "guid": "006656dc-4514-447f-8472-40590ba7d6ad"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Define Pod resource requests and limits in application deployment manifests, and enforce with Azure Policy.",
            "description": "Container CPU and memory resource limits are necessary to prevent resource exhaustion in your Kubernetes cluster.",
            "type": "recommendation",
            "guid": "daae16b3-339a-4f9c-a2e1-16437f2b39b0"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Keep the System node pool isolated from application workloads.",
            "description": "System node pools require a VM SKU of at least 2 vCPUs and 4 GB memory, but 4 vCPU or more is recommended. Reference System and user node pools for detailed requirements.",
            "type": "recommendation",
            "guid": "8482ef12-2aa4-41ac-a90f-a41988abef7e"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Separate applications to dedicated node pools based on specific requirements.",
            "description": "Applications may share the same configuration and need GPU-enabled VMs, CPU or memory optimized VMs, or the ability to scale-to-zero. Avoid large number of node pools to reduce extra management overhead.",
            "type": "recommendation",
            "guid": "d7fe91f7-0a16-43cc-9306-dc3c8f435698"
        },
        {
            "waf": "Reliability",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Use a NAT gateway for clusters that run workloads that make many concurrent outbound connections.",
            "description": "To avoid reliability issues with Azure Load Balancer limitations with high concurrent outbound traffic, us a NAT Gateway instead to support reliable egress traffic at scale.",
            "type": "recommendation",
            "guid": "39c79408-332f-449d-8c22-308c4eee21d2"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Use Microsoft Entra integration.",
            "description": "Using Microsoft Entra ID centralizes the identity management component. Any change in user account or group status is automatically updated in access to the AKS cluster. The developers and application owners of your Kubernetes cluster need access to different resources.",
            "type": "recommendation",
            "guid": "50fb3fc8-14f2-4856-bb4e-4af6cadfeabe"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Authenticate with Microsoft Entra ID to Azure Container Registry.",
            "description": "AKS and Microsoft Entra ID enables authentication with Azure Container Registry without the use of `imagePullSecrets` secrets. Review Authenticate with Azure Container Registry from Azure Kubernetes Service for more information.",
            "type": "recommendation",
            "guid": "743a94f9-3a7e-4b04-9766-f4895e826914"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Secure network traffic to your API server with private AKS cluster.",
            "description": "By default, network traffic between your node pools and the API server travels the Microsoft backbone network; by using a private cluster, you can ensure network traffic to your API server remains on the private network only.",
            "type": "recommendation",
            "guid": "4ba645c2-e73c-4d64-b122-afdf0b45243a"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: For non-private AKS clusters, use API server authorized IP ranges.",
            "description": "When using public clusters, you can still limit the traffic that can reach your clusters API server by using the authorized IP range feature. Include sources like the public IPs of your deployment build agents, operations management, and node pools' egress point (such as Azure Firewall).",
            "type": "recommendation",
            "guid": "46d7f245-f07f-4e88-bb2d-faca191bd7f6"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Protect the API server with Microsoft Entra RBAC.",
            "description": "Securing access to the Kubernetes API Server is one of the most important things you can do to secure your cluster. Integrate Kubernetes role-based access control (RBAC) with Microsoft Entra ID to control access to the API server. Disable local accounts to enforce all cluster access using Microsoft Entra ID-based identities.",
            "type": "recommendation",
            "guid": "70a1f14b-2493-467a-baaa-0082ad3e6e66"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Use Azure network policies or Calico.",
            "description": "Secure and control network traffic between pods in a cluster.",
            "type": "recommendation",
            "guid": "9c861a46-6ed6-46c4-a407-d3a540731c4f"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Secure clusters and pods with Azure Policy.",
            "description": "Azure Policy can help to apply at-scale enforcement and safeguards on your clusters in a centralized, consistent manner. It can also control what functions pods are granted and if anything is running against company policy.",
            "type": "recommendation",
            "guid": "4aca3024-722c-4aa0-b727-d38adfcc2a46"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Secure container access to resources.",
            "description": "Limit access to actions that containers can perform. Provide the least number of permissions, and avoid the use of root or privileged escalation.",
            "type": "recommendation",
            "guid": "37e193d8-d9b1-4444-8f2f-4186242f88cb"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use a Web Application Firewall to secure HTTP(S) traffic.",
            "description": "To scan incoming traffic for potential attacks, use a web application firewall such as Azure Web Application Firewall (WAF) on Azure Application Gateway or Azure Front Door.",
            "type": "recommendation",
            "guid": "ecb6538c-45f3-46a8-ac7d-ef09e28905d9"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Control cluster egress traffic.",
            "description": "Ensure your cluster's outbound traffic is passing through a network security point such as Azure Firewall or an HTTP proxy.",
            "type": "recommendation",
            "guid": "8b978cf0-6f57-4b16-8ff4-c21cb24f9fda"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Use the open-source Microsoft Entra Workload ID and Secrets Store CSI Driver with Azure Key Vault.",
            "description": "Protect and rotate secrets, certificates, and connection strings in Azure Key Vault with strong encryption. Provides an access audit log, and keeps core secrets out of the deployment pipeline.",
            "type": "recommendation",
            "guid": "1287d8a6-3b9b-4cad-af36-efb95fb960ec"
        },
        {
            "waf": "Security",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Use Microsoft Defender for Containers.",
            "description": "Monitor and maintain the security of your clusters, containers, and their applications.",
            "type": "recommendation",
            "guid": "ca24b98e-95aa-4250-9020-35f835aa8141"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Align SKU selection and managed disk size with workload requirements.",
            "description": "Matching your selection to your workload demands ensures you don't pay for unneeded resources.",
            "type": "recommendation",
            "guid": "c318e6a0-4795-49ec-9911-6f0ecb79d7a6"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Select the right virtual machine instance type.",
            "description": "Selecting the right virtual machine instance type is critical as it directly impacts the cost of running applications on AKS. Choosing a high-performance instance without proper utilization can lead to wasteful spending, while choosing a powerful instance can lead to performance issues and increased downtime. To determine the right virtual machine instance type, consider workload characteristics, resource requirements, and availability needs.",
            "type": "recommendation",
            "guid": "87bb48b7-2f60-40f8-b5d5-a97e06baafc4"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Select virtual machines based on the Arm architecture.",
            "description": "AKS supports creating ARM64 Ubuntu agent nodes, as well as a of mix Intel and ARM architecture nodes within a cluster that can bring better performance at a lower cost.",
            "type": "recommendation",
            "guid": "761503f3-f91b-47dc-b732-ed2079836237"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Select Azure Spot Virtual Machines.",
            "description": "Spot VMs allow you to take advantage of unutilized Azure capacity with significant discounts (up to 90% as compared to pay-as-you-go prices). If Azure needs capacity back, the Azure infrastructure evicts the Spot nodes.",
            "type": "recommendation",
            "guid": "54565ad7-0937-4126-bdd9-d242dcde1dc7"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Select the appropriate region.",
            "description": "Due to many factors, cost of resources varies per region in Azure. Evaluate the cost, latency, and compliance requirements to ensure you are running your workload cost-effectively and it doesn't affect your end-users or create extra networking charges.",
            "type": "recommendation",
            "guid": "850c4199-ce25-4f8b-be6a-dbcb2009cf4a"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Maintain small and optimized images.",
            "description": "Streamlining your images helps reduce costs since new nodes need to download these images. Build images in a way that allows the container start as soon as possible to help avoid user request failures or timeouts while the application is starting up, potentially leading to overprovisioning.",
            "type": "recommendation",
            "guid": "b17c40ac-02c7-4fbb-b804-7e246c89d073"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Enable Cluster Autoscaler to automatically reduce the number of agent nodes in response to excess resource capacity.",
            "description": "Automatically scaling down the number of nodes in your AKS cluster lets you run an efficient cluster when demand is low and scale up when demand returns.",
            "type": "recommendation",
            "guid": "35c3f143-8af5-4064-bff7-5cfee9b3de2b"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Enable Node Autoprovision to automate VM SKU selection.",
            "description": "Node Autoprovision simplifies the SKU selection process and decides, based on pending pod resource requirements, the optimal VM configuration to run workloads in the most efficient and cost effective manner.",
            "type": "recommendation",
            "guid": "b671b868-82a9-4e67-b695-2a231daa98a9"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use the Horizontal Pod Autoscaler.",
            "description": "Adjust the number of pods in a deployment depending on CPU utilization or other select metrics, which support cluster scale-in operations.",
            "type": "recommendation",
            "guid": "67bba4f2-32da-4816-adba-26cdd8416310"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use Vertical Pod Autoscaler (preview).",
            "description": "Rightsize your pods and dynamically set requests and limits based on historic usage.",
            "type": "recommendation",
            "guid": "4727a766-8d04-4609-b397-dd7ae2e1a6eb"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use Kubernetes Event Driven Autoscaling (KEDA).",
            "description": "Scale based on the number of events being processed. Choose from a rich catalogue of 50+ KEDA scalers.",
            "type": "recommendation",
            "guid": "47d91c51-224c-4d38-877a-f54d8c8b513c"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Adopt a cloud financial discipline and cultural practice to drive ownership of cloud usage.",
            "description": "The foundation of enabling cost optimization is the spread of a cost saving cluster. A financial operations approach (FinOps) is often used to help organizations reduce cloud costs. It is a practice involving collaboration between finance, operations, and engineering teams to drive alignment on cost saving goals and bring transparency to cloud costs.",
            "type": "recommendation",
            "guid": "519b4bb1-9a1a-41a6-b445-498f858c700f"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Sign up for Azure Reservations or Azure Savings Plan.",
            "description": "If you properly planned for capacity, your workload is predictable and exists for an extended period of time, sign up for an Azure Reservation or a savings plan to further reduce your resource costs.",
            "type": "recommendation",
            "guid": "268e3171-4a88-4ee1-9096-7956cf6a7009"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Configure monitoring of cluster with Container insights.",
            "description": "Container insights help provides actionable insights into your clusters idle and unallocated resources. Container insights also supports collecting Prometheus metrics and integrates with Azure Managed Grafana to get a holistic view of your application and infrastructure.",
            "type": "recommendation",
            "guid": "b0c6d2ab-4cee-4e81-be4e-b26b466c049d"
        },
        {
            "waf": "Cost",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Configure the AKS Cost Analysis add-on.",
            "description": "The cost analysis cluster extension enables you to obtain granular insight into costs associated with various Kubernetes resources in your clusters or namespaces.",
            "type": "recommendation",
            "guid": "f783ed2e-e0b7-494e-8b6c-03a7c7f0a521"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Review AKS best practices documentation.",
            "description": "To build and run applications successfully in AKS, there are key considerations to understand and implement. These areas include multi-tenancy and scheduler features, cluster, and pod security, or business continuity and disaster recovery.",
            "type": "recommendation",
            "guid": "34538d1b-a5ff-4ec6-9312-eaeb1dcbacf1"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Review Azure Chaos Studio.",
            "description": "Azure Chaos Studio can help simulate faults and trigger disaster recovery situations.",
            "type": "recommendation",
            "guid": "73ed49fe-4b44-4bbc-b8ee-59bb6e602187"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Configure monitoring of cluster with Container insights.",
            "description": "Container insights help monitor the performance of containers by collecting memory and processor metrics from controllers, nodes, and containers that are available in Kubernetes through the Metrics API and container logs.",
            "type": "recommendation",
            "guid": "2760ddd2-3f7b-4a74-a742-602c4b2b1ee0"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Monitor application performance with Azure Monitor.",
            "description": "Configure Application Insights for code-based monitoring of applications running in an AKS cluster.",
            "type": "recommendation",
            "guid": "41a1cac4-ce0f-44c8-b0b6-d7e36aeace4d"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Configure scraping of Prometheus metrics with Container insights.",
            "description": "Container insights, which are part of Azure Monitor, provide a seamless onboarding experience to collect Prometheus metrics. Reference Configure scraping of Prometheus metrics for more information.",
            "type": "recommendation",
            "guid": "95e28189-fdd7-4679-aeea-2070436acbd4"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Adopt a multiregion strategy by deploying AKS clusters deployed across different Azure regions to maximize availability and provide business continuity.",
            "description": "Internet facing workloads should leverage Azure Front Door or Azure Traffic Manager to route traffic globally across AKS clusters.",
            "type": "recommendation",
            "guid": "fbac9fd5-6811-4c97-8664-a598a206679c"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Operationalize clusters and pods configuration standards with Azure Policy.",
            "description": "Azure Policy can help to apply at-scale enforcement and safeguards on your clusters in a centralized, consistent manner. It can also control what functions pods are granted and if anything is running against company policy.",
            "type": "recommendation",
            "guid": "3531bc0d-e5ef-4513-bec0-4fe92182f3f0"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use platform capabilities in your release engineering process.",
            "description": "Kubernetes and ingress controllers support many advanced deployment patterns for inclusion in your release engineering process. Consider patterns like blue-green deployments or canary releases.",
            "type": "recommendation",
            "guid": "6c472ee9-9c78-482a-bb39-bfd85de6e7a9"
        },
        {
            "waf": "Operations",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: For mission-critical workloads, use stamp-level blue/green deployments.",
            "description": "Automate your mission-critical design areas, including deployment and testing.",
            "type": "recommendation",
            "guid": "be17bb53-96e5-4295-96fb-ba078126befe"
        },
        {
            "waf": "Performance",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Develop a detailed capacity plan and continually review and revise.",
            "description": "After formalizing your capacity plan, it should be frequently updated by continuously observing the resource utilization of the cluster.",
            "type": "recommendation",
            "guid": "c45e82d7-78ac-4dac-af7d-6b9fa46201ce"
        },
        {
            "waf": "Performance",
            "service": "Azure Kubernetes Service",
            "text": "Cluster architecture: Enable cluster autoscaler to automatically adjust the number of agent nodes in response to resource constraints.",
            "description": "The ability to automatically scale up or down the number of nodes in your AKS cluster lets you run an efficient, cost-effective cluster.",
            "type": "recommendation",
            "guid": "2bc67a06-669d-4576-9ff7-467d440cd601"
        },
        {
            "waf": "Performance",
            "service": "Azure Kubernetes Service",
            "text": "Cluster and workload architectures: Separate workloads into different node pools and consider scaling user node pools.",
            "description": "Unlike System node pools that always require running nodes, user node pools allow you to scale up or down.",
            "type": "recommendation",
            "guid": "14d66ba7-8381-4a2e-99f9-b52d42877bb7"
        },
        {
            "waf": "Performance",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use AKS advanced scheduler features.",
            "description": "Helps control balancing of resources for workloads that require them.",
            "type": "recommendation",
            "guid": "69aadc69-d7f2-49a7-a8c0-948d950104d2"
        },
        {
            "waf": "Performance",
            "service": "Azure Kubernetes Service",
            "text": "Workload architecture: Use meaningful workload scaling metrics.",
            "description": "Not all scale decisions can be derived from CPU or memory metrics. Often scale considerations will come from more complex or even external data points. Use KEDA to build a meaningful auto scale ruleset based on signals that are specific to your workload.",
            "type": "recommendation",
            "guid": "e5abfe2f-c669-42a3-9a0a-bdf9570208bc"
        }
    ],
    "categories": [],
    "waf": [
        {
            "name": "Performance"
        },
        {
            "name": "Operations"
        },
        {
            "name": "operations"
        },
        {
            "name": "Cost"
        },
        {
            "name": "Reliability"
        },
        {
            "name": "reliability"
        },
        {
            "name": "cost"
        },
        {
            "name": "security"
        },
        {
            "name": "performance"
        },
        {
            "name": "Security"
        }
    ],
    "yesno": [
        {
            "name": "Yes"
        },
        {
            "name": "No"
        }
    ],
    "status": [
        {
            "name": "Not verified",
            "description": "This check has not been looked at yet"
        },
        {
            "name": "Open",
            "description": "There is an action item associated to this check"
        },
        {
            "name": "Fulfilled",
            "description": "This check has been verified, and there are no further action items associated to it"
        },
        {
            "name": "N/A",
            "description": "Not applicable for current design"
        },
        {
            "name": "Not required",
            "description": "Not required"
        }
    ],
    "metadata": {
        "name": "Azure Kubernetes Service Service Guide",
        "waf": "all",
        "state": "preview",
        "timestamp": "July 24, 2024"
    }
}