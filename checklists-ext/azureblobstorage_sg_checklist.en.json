{
    "$schema": "https://raw.githubusercontent.com/Azure/review-checklists/main/checklists/checklist.schema.json",
    "items": [
        {
            "waf": "Reliability",
            "service": "Azure Blob Storage",
            "text": "Configure your account for redundancy. For maximum availability and durability, configure your account by using zone-redundant storage (ZRS) or GZRS.",
            "description": "Redundancy protects your data against unexpected failures. The ZRS and GZRS configuration options replicate across different availability zones and enable applications to continue reading data during an outage. For more information, see Durability and availability by outage scenario and Durability and availability parameters.",
            "type": "recommendation",
            "guid": "6e3a0d4c-f59e-4049-a15d-30ca8ac3bc5e"
        },
        {
            "waf": "Reliability",
            "service": "Azure Blob Storage",
            "text": "Before initiating a failover or failback, evaluate the potential for data loss by checking the value of the last synchronization time property. This recommendation applies only to GRS and GZRS configurations.",
            "description": "This property helps you estimate how much data you might lose by initiating an account failover. All data and metadata written before the last synchronization time is available on the secondary region, but data and metadata written after the last synchronization time might be lost because it's not written to the secondary region.",
            "type": "recommendation",
            "guid": "b9413c5c-1467-4f04-aa56-66756174bfe4"
        },
        {
            "waf": "Reliability",
            "service": "Azure Blob Storage",
            "text": "As a part of your backup and recovery strategy, enable the container soft delete, blob soft delete, versioning, and point-in-time restore options.",
            "description": "The soft delete option enables a storage account to recover deleted containers and blobs. The versioning option automatically tracks changes made to blobs. This option lets you restore a blob to a previous state.The point-in-time restore option protects against accidental blob deletion or corruption and lets you restore block blob data to an earlier state. For more information, see Data protection overview.",
            "type": "recommendation",
            "guid": "7900bd00-c4b2-4e8d-b006-0efdf966daa7"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Disable anonymous read access to containers and blob.",
            "description": "When anonymous access is allowed for a storage account, a user that has the appropriate permissions can modify a container's anonymous access setting to enable anonymous access to the data in that container.",
            "type": "recommendation",
            "guid": "5d7648fc-6e65-46da-beb4-b7da768cd856"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Apply an Azure Resource Manager lock on the storage account.",
            "description": "Locking an account prevents it from being deleted and causing data loss.",
            "type": "recommendation",
            "guid": "a279d1d6-4a74-4533-aef0-6d658c196084"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Disable traffic to the public endpoints of your storage account. Create private endpoints for clients that run in Azure. Enable the public endpoint only if clients and services external to Azure require direct access to your storage account. Enable firewall rules that limit access to specific virtual networks.",
            "description": "Start with zero access and then incrementally authorize the lowest levels of access required for clients and services to minimize the risk of creating unnecessary openings for attackers.",
            "type": "recommendation",
            "guid": "a3a5d6f5-b15b-4b9f-83a4-590d9f826f11"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Authorize access by using Azure role-based access control (RBAC).",
            "description": "With RBAC, there are no passwords or keys that can be compromised. The security principal (user, group, managed identity, or service principal) is authenticated by Microsoft Entra ID to return an OAuth 2.0 token. The token is used to authorize a request against the Blob Storage service.",
            "type": "recommendation",
            "guid": "945c0935-f1fd-4b22-a24e-5b767202d86e"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Disallow shared key authorization. This disables not only account key access but also service and account shared access signature tokens because they're based on account keys.",
            "description": "Only secured requests that are authorized with Microsoft Entra ID are permitted.",
            "type": "recommendation",
            "guid": "20c571b0-d4cf-4641-bd1d-1310f8cd6eb2"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "We recommend that you don't use an account key. If you must use account keys, then store them in Key Vault, and make sure that you regenerate them periodically.",
            "description": "Key Vault lets you retrieve keys at runtime, instead of saving them by using your application. Key Vault also makes it easy to rotate your keys without interruption to your applications. Rotating the account keys periodically reduces the risk of exposing your data to malicious attacks.",
            "type": "recommendation",
            "guid": "49899213-759d-4cac-b34a-446526b56f4b"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "We recommend that you don't use shared access signature tokens. Evaluate whether you need shared access signature tokens to secure access to Blob Storage resources. If you must create one, then review this list of shared access signature best practices before you create and distribute it.",
            "description": "Best practices can help you prevent a shared access signature token from being leaked and quickly recover if a leak does occur.",
            "type": "recommendation",
            "guid": "cb1a2ad8-7833-45be-97e5-4afc4a38cfc4"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Configure your storage account so clients can send and receive data by using the minimum version of TLS 1.2.",
            "description": "TLS 1.2 is more secure and faster than TLS 1.0 and 1.1, which don't support modern cryptographic algorithms and cipher suites.",
            "type": "recommendation",
            "guid": "9bf21313-427b-4208-8815-9e6323d55f4c"
        },
        {
            "waf": "Security",
            "service": "Azure Blob Storage",
            "text": "Consider using your own encryption key to protect the data in your storage account. For more information, see Customer-managed keys for Azure Storage encryption.",
            "description": "Customer-managed keys provide greater flexibility and control. For example, you can store encryption keys in Key Vault and automatically rotate them.",
            "type": "recommendation",
            "guid": "76f6e285-5bed-46c0-a50d-b8024c4fd512"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "Pack small files into larger files before moving them to cooler tiers. You can use file formats such as TAR or ZIP.",
            "description": "Cooler tiers have higher data transfer costs. By having fewer large files, you can reduce the number of operations required to transfer data.",
            "type": "recommendation",
            "guid": "68a2d8f2-ccf3-4cde-9466-61444d55d7d3"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "Use standard-priority rehydration when rehydrating blobs from archive storage. Use high-priority rehydration only for emergency data restoration situations. For more information, see Rehydrate an archived blob to an online tier",
            "description": "High-priority rehydration from the archive tier can lead to higher-than-normal bills.",
            "type": "recommendation",
            "guid": "b3b25570-9501-4ccf-a42f-bf1ab7a1796d"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "Reduce the cost of using resource logs by choosing the appropriate log storage location and by managing log-retention periods. If you only plan to query logs occasionally (for example, querying logs for compliance auditing), consider sending resource logs to a storage account instead of sending them to an Azure Monitor Logs workspace. You can use a serverless query solution such as Azure Synapse Analytics to analyze logs. For more information, see Optimize cost for infrequent queries. Use lifecycle management policies to delete or archive logs.",
            "description": "Storing resource logs in a storage account for later analysis can be a cheaper option. Using lifecycle management policies to manage log retention in a storage account prevents large numbers of logs files building up over time, which can lead to unnecessary capacity charges.",
            "type": "recommendation",
            "guid": "9c10778d-ed29-4ac4-b310-38987b3ba76b"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "If you enable versioning, use a lifecycle management policy to automatically delete old blob versions.",
            "description": "Every write operation to a blob creates a new version. This increases capacity costs. You can keep costs in check by removing versions that you no longer need.",
            "type": "recommendation",
            "guid": "05ba2481-3ecf-4808-a6fd-211f0a7db6ce"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "If you enable versioning, then place blobs that are frequently overwritten into an account that doesn't have versioning enabled.",
            "description": "Every time a blob is overwritten, a new version is added which leads to increased storage capacity charges. To reduce capacity charges, store frequently overwritten data in a separate storage account with versioning disabled.",
            "type": "recommendation",
            "guid": "2b3cf36b-31a3-48c2-8624-9c8bdbf15a07"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "If you enable soft delete, then place blobs that are frequently overwritten into an account that doesn't have soft delete enabled. Set retention periods. Consider starting with a short retention period to better understand how the feature affects your bill. The minimum recommended retention period is seven days.",
            "description": "Every time a blob is overwritten, a new snapshot is created. The cause of increased capacity charges might be difficult to access because the creation of these snapshots doesn't appear in logs. To reduce capacity charges, store frequently overwritten data in a separate storage account with soft delete disabled. A retention period keeps soft-deleted blobs from piling up and adding to the cost of capacity.",
            "type": "recommendation",
            "guid": "ea98ff0a-e389-4eb1-9f55-98d638152d68"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "Enable SFTP support only when it's used to transfer data.",
            "description": "Enabling the SFTP endpoint incurs an hourly cost. By thoughtfully disabling SFTP support, and then enabling it as needed, you can avoid passive charges from accruing in your account.",
            "type": "recommendation",
            "guid": "918a9943-7dd2-47be-9d8f-d7088e08247d"
        },
        {
            "waf": "Cost",
            "service": "Azure Blob Storage",
            "text": "Disable any encryption scopes that aren't needed to avoid unnecessary charges.",
            "description": "Encryptions scopes incur a per month charge.",
            "type": "recommendation",
            "guid": "dda91f7c-dd40-485d-af07-7ef14c90de03"
        },
        {
            "waf": "Operations",
            "service": "Azure Blob Storage",
            "text": "Use infrastructure as code (IaC) to define the details of your storage accounts in Azure Resource Manager templates (ARM templates), Bicep, or Terraform.",
            "description": "You can use your existing DevOps processes to deploy new storage accounts, and use Azure Policy to enforce their configuration.",
            "type": "recommendation",
            "guid": "fab63e96-cd06-4c4d-b92c-3b32a554e2d5"
        },
        {
            "waf": "Operations",
            "service": "Azure Blob Storage",
            "text": "Use Storage insights to track the health and performance of your storage accounts. Storage insights provides a unified view of the failures, performance, availability, and capacity for all your storage accounts.",
            "description": "You can track the health and operation of each of your accounts. Easily create dashboards and reports that stakeholders can use to track the health of your storage accounts.",
            "type": "recommendation",
            "guid": "fe67dbff-1ce7-4ac5-8b12-b0c3e23e66f3"
        },
        {
            "waf": "Performance",
            "service": "Azure Blob Storage",
            "text": "Provision storage accounts in the same region where dependent resources are placed. For applications that aren't hosted on Azure, such as mobile device apps or on-premises enterprise services, locate the storage account in a region nearer to those clients. For more information, see Azure geographies.If clients from a different region don't require the same data, then create a separate account in each region.If clients from a different region require only some data, consider using an object-replication policy to asynchronously copy relevant objects to a storage account in the other region.",
            "description": "Reducing the physical distance between the storage account and VMs, services, and on-premises clients can improve performance and reduce network latency. Reducing the physical distance also reduces cost for applications hosted in Azure because bandwidth usage within a single region is free.",
            "type": "recommendation",
            "guid": "f8126892-8d54-4a95-8e93-cc34bd50443d"
        },
        {
            "waf": "Performance",
            "service": "Azure Blob Storage",
            "text": "For broad consumption by web clients (streaming video, audio, or static website content), consider using a content delivery network through Azure Front Door.",
            "description": "Content is delivered to clients faster because it uses the Microsoft global edge network with hundreds of global and local points of presence around the world.",
            "type": "recommendation",
            "guid": "9a8a245d-71e9-45a8-b143-de66b3b87fd1"
        },
        {
            "waf": "Performance",
            "service": "Azure Blob Storage",
            "text": "Add a hash character sequence (such as three digits) as early as possible in the partition key of a blob. The partition key is the account name, container name, virtual directory name, and blob name. If you plan to use timestamps in names, then consider adding a seconds value to the beginning of that stamp. For more information, see Partitioning.",
            "description": "Using a hash code or seconds value nearest the beginning of a partition key reduces the time required to list query and read blobs.",
            "type": "recommendation",
            "guid": "215dace2-6d30-430f-9ab0-90ada951e981"
        },
        {
            "waf": "Performance",
            "service": "Azure Blob Storage",
            "text": "When uploading blobs or blocks, use a blob or block size that's greater than 256 KiB.",
            "description": "Blob or block sizes above 256 KiB takes advantage of performance enhancements in the platform made specifically for larger blobs and block sizes.",
            "type": "recommendation",
            "guid": "7c748c26-7894-46d4-811b-3f792790b567"
        }
    ],
    "categories": [],
    "waf": [
        {
            "name": "Performance"
        },
        {
            "name": "Operations"
        },
        {
            "name": "operations"
        },
        {
            "name": "Cost"
        },
        {
            "name": "Reliability"
        },
        {
            "name": "reliability"
        },
        {
            "name": "cost"
        },
        {
            "name": "security"
        },
        {
            "name": "performance"
        },
        {
            "name": "Security"
        }
    ],
    "yesno": [
        {
            "name": "Yes"
        },
        {
            "name": "No"
        }
    ],
    "status": [
        {
            "name": "Not verified",
            "description": "This check has not been looked at yet"
        },
        {
            "name": "Open",
            "description": "There is an action item associated to this check"
        },
        {
            "name": "Fulfilled",
            "description": "This check has been verified, and there are no further action items associated to it"
        },
        {
            "name": "N/A",
            "description": "Not applicable for current design"
        },
        {
            "name": "Not required",
            "description": "Not required"
        }
    ],
    "metadata": {
        "name": "Azure Blob Storage Service Guide",
        "waf": "all",
        "state": "preview",
        "timestamp": "July 24, 2024"
    }
}