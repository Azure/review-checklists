{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {},
    "parameters": {
        "checklistTech": {
            "type": "string",
            "defaultValue": "lz",
            "allowedValues": [
                "lz",
                "aks",
                "avd",
                "security"
            ],
            "metadata": {
                "description": "Options available for the checklist"
            }
        },
        "identityId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "ID for user-assigned identity that will be assigned to the ACI (not required if specifying Tenant ID, Client ID and Client secret)"
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Tenant ID for SP-based authentication (not required if specifying Identity Id)"
            }
        },
        "clientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Client ID for SP-based authentication (not required if specifying Identity Id)"
            }
        },
        "clientSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Client secret for SP-based authentication (not required if specifying Identity Id)"
            }
        },
        "aciName": {
            "type": "string",
            "metadata": {
                "description": "ACI name for container group"
            }
        },
        "serverName": {
            "type": "string",
            "metadata": {
                "description": "Server Name for Azure database for MySQL"
            }
        },
        "administratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "MySQL server administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "MySQL server administrator password"
            }
        },
        "waitIntervals": {
            "type": "int",
            "defaultValue": "[if(equals(parameters('identityId'),''), 0, 3)]",
            "metadata": {
                "description": "MySQL server administrator password"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "functions": [],
    "variables": {
        "mysql_api_version": "2017-12-01",
        "identity_api_version": "2018-11-30",
        "roleassignment_api_version": "2020-04-01-preview",
        "aci_api_version": "2019-12-01",
        "skuName": "B_Gen5_1",
        "skuFamily": "Gen5",
        "skuCapacity": 1,
        "skuTier": "Basic",
        "skuSizeMB": 5120,
        "mySqlVersion": "5.7",
        "backupRetentionDays": 7,
        "geoRedundantBackup": "Disabled",
        "sslEnforcement": "Disabled",
        "firewallrules": [
            {
                "Name": "permitAll",
                "StartIpAddress": "0.0.0.0",
                "EndIpAddress": "255.255.255.255"
            }
        ],
        "webImage": "erjosito/checklist-flask:1.0",
        "filldbImage": "erjosito/checklist-filldb:1.0",
        "fillgraphdbImage": "erjosito/checklist-fillgraphdb:1.0",
        "webName": "[concat(parameters('aciName'), '-web')]",
        "filldbName": "[concat(parameters('aciName'), '-db')]",
        "fillgraphdbName": "[concat(parameters('aciName'), '-graph')]",
        "aciPort": 5000,
        "idJson": "[concat('{\"type\": \"UserAssigned\", \"userAssignedIdentities\": {\"', parameters('identityId'), '\": {} } }')]",
        "spVariablesJson":"[concat('{\"name\": \"AZURE_TENANT_ID\", \"secureValue\": \"', parameters('tenantId'), '\"}, {\"name\": \"AZURE_CLIENT_ID\", \"secureValue\": \"', parameters('clientId'), '}, {\"name\": \"AZURE_CLIENT_SECRET\", \"secureValue\": \"', parameters('clientSecret'), '\"}')]"
    },
    "resources": [
        {
            "type": "Microsoft.DBforMySQL/servers",
            "apiVersion": "[variables('mysql_api_version')]",
            "name": "[parameters('serverName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('skuName')]",
                "tier": "[variables('skuTier')]",
                "capacity": "[variables('skuCapacity')]",
                "size": "[format('{0}', variables('skuSizeMB'))]",
                "family": "[variables('skuFamily')]"
            },
            "properties": {
                "createMode": "Default",
                "version": "[variables('mysqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "sslEnforcement": "[variables('sslEnforcement')]",
                "storageProfile": {
                    "storageMB": "[variables('skuSizeMB')]",
                    "backupRetentionDays": "[variables('backupRetentionDays')]",
                    "geoRedundantBackup": "[variables('geoRedundantBackup')]"
                }
            }
        },
        {
            "copy": {
                "name": "firewallRules",
                "count": "[length(variables('firewallrules'))]",
                "mode": "serial",
                "batchSize": 1
            },
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "[variables('mysql_api_version')]",
            "name": "[format('{0}/{1}', parameters('serverName'), variables('firewallrules')[copyIndex()].Name)]",
            "properties": {
            "startIpAddress": "[variables('firewallrules')[copyIndex()].StartIpAddress]",
            "endIpAddress": "[variables('firewallrules')[copyIndex()].EndIpAddress]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]"
            ]
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "[variables('aci_api_version')]",
            "name": "[variables('filldbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]"
            ],
            "properties": {
                "initContainers": [],
                "containers": [
                    {
                        "name": "filldb",
                        "properties": {
                            "image": "[variables('filldbImage')]",
                            "environmentVariables": [
                                {
                                    "name": "CHECKLIST_TECHNOLOGY",
                                    "value": "[parameters('checklistTech')]"
                                },
                                {
                                    "name": "MYSQL_USER",
                                    "secureValue": "[parameters('administratorLogin')]"
                                },
                                {
                                    "name": "MYSQL_PASSWORD",
                                    "secureValue": "[parameters('administratorLoginPassword')]"
                                },
                                {
                                    "name": "MYSQL_FQDN",
                                    "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))).fullyQualifiedDomainName]"
                                }
                            ],
                            "ports": [],
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux",
                "restartPolicy": "Always"
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "[variables('aci_api_version')]",
            "name": "[concat(variables('fillgraphdbName'),'-sp')]",
            "location": "[parameters('location')]",
            "condition": "[equals(parameters('identityId'), '')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('filldbName'))]"
            ],
            "identity": "[if(equals(parameters('identityId'), ''), json('null'), json(variables('idJson')))]",
            "properties": {
                "initContainers": [],
                "containers": [
                    {
                        "name": "fillgraphdb",
                        "properties": {
                            "image": "[variables('fillgraphdbImage')]",
                            "environmentVariables": [
                                {
                                    "name": "MYSQL_USER",
                                    "secureValue": "[parameters('administratorLogin')]"
                                },
                                {
                                    "name": "MYSQL_PASSWORD",
                                    "secureValue": "[parameters('administratorLoginPassword')]"
                                },
                                {
                                    "name": "MYSQL_FQDN",
                                    "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))).fullyQualifiedDomainName]"
                                },
                                {
                                    "name": "AZURE_TENANT_ID",
                                    "secureValue": "[parameters('tenantId')]"
                                },
                                {
                                    "name": "AZURE_CLIENT_ID",
                                    "secureValue": "[parameters('clientId')]"
                                },
                                {
                                    "name": "AZURE_CLIENT_SECRET",
                                    "secureValue": "[parameters('clientSecret')]"
                                },
                                {
                                    "name": "WAIT_INTERVALS",
                                    "secureValue": "[parameters('waitIntervals')]"
                                }
                            ],
                            "ports": [
                                {
                                    "port": "[variables('aciPort')]",
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux",
                "restartPolicy": "Always",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "port": "[variables('aciPort')]",
                            "protocol": "TCP"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "[variables('aci_api_version')]",
            "name": "[concat(variables('fillgraphdbName'),'-mi')]",
            "location": "[parameters('location')]",
            "condition": "[not(equals(parameters('identityId'), ''))]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('filldbName'))]"
            ],
            "identity": "[if(equals(parameters('identityId'), ''), json('null'), json(variables('idJson')))]",
            "properties": {
                "initContainers": [],
                "containers": [
                    {
                        "name": "fillgraphdb",
                        "properties": {
                            "image": "[variables('fillgraphdbImage')]",
                            "environmentVariables": [
                                {
                                    "name": "MYSQL_USER",
                                    "secureValue": "[parameters('administratorLogin')]"
                                },
                                {
                                    "name": "MYSQL_PASSWORD",
                                    "secureValue": "[parameters('administratorLoginPassword')]"
                                },
                                {
                                    "name": "MYSQL_FQDN",
                                    "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))).fullyQualifiedDomainName]"
                                },
                                {
                                    "name": "WAIT_INTERVALS",
                                    "secureValue": "[parameters('waitIntervals')]"
                                }
                            ],
                            "ports": [
                                {
                                    "port": "[variables('aciPort')]",
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux",
                "restartPolicy": "Always",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "port": "[variables('aciPort')]",
                            "protocol": "TCP"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "[variables('aci_api_version')]",
            "name": "[variables('webName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerInstance/containerGroups', concat(variables('fillgraphdbName'),'-sp'))]",
                "[resourceId('Microsoft.ContainerInstance/containerGroups', concat(variables('fillgraphdbName'),'-mi'))]"
            ],
            "properties": {
                "initContainers": [],
                "containers": [
                    {
                        "name": "flask",
                        "properties": {
                            "image": "[variables('webImage')]",
                            "environmentVariables": [
                                {
                                    "name": "MYSQL_USER",
                                    "secureValue": "[parameters('administratorLogin')]"
                                },
                                {
                                    "name": "MYSQL_PASSWORD",
                                    "secureValue": "[parameters('administratorLoginPassword')]"
                                },
                                {
                                    "name": "MYSQL_FQDN",
                                    "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))).fullyQualifiedDomainName]"
                                }
                            ],
                            "ports": [
                                {
                                    "port": "[variables('aciPort')]",
                                    "protocol": "TCP"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux",
                "restartPolicy": "Always",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "port": "[variables('aciPort')]",
                            "protocol": "TCP"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "containerIPv4Address": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', variables('webName'))).ipAddress.ip]"
        },
        "waitIntervals": {
            "type": "int",
            "value": "[parameters('waitIntervals')]"
        }
    }
}
