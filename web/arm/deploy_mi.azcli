##############################################
# 1. Retrieve Managed Identity, or create one #
##############################################

id_name=checklistid
id_location=westeurope
id_rg=checklistid
id_id=$(az identity show -n $id_name -g $id_rg --query id -o tsv)
if [[ -z "$id_id" ]]; then
    echo "Creating user identity in resource group ${id_rg}..."
    az group create -n $id_rg -l $id_location -o none
    az identity create -n $id_name -g $id_rg -o none
    id_id=$(az identity show -n $id_name -g $id_rg --query id -o tsv)
    id_client_id=$(az identity show -n $id_name -g $id_rg --query clientId -o tsv)
    subscription_id=$(az account show --query id -o tsv)
    scope="/subscriptions/${subscription_id}"
    az role assignment create --scope $scope --assignee $id_client_id --role 'Reader' -o none
    echo "User-managed identity has been created: $id_id"
else
    echo "User-managed identity has been located: $id_id"
fi

####################################################
# 2. Create RG and deploy checklist infrastructure #
####################################################

# Variables
suffix=$RANDOM
rg="checklist${suffix}"
location=westeurope
aci_name="checklistaci${suffix}"
mysql_server_name="mysql${suffix}"
mysql_server_user=$(whoami)
mysql_server_password=$(echo $(tr -dc a-zA-Z0-9 </dev/urandom 2>/dev/null| head -c 12))

# Create RG
echo "Creating resource group ${rg} in ${location}..."
az group create -n $rg -l $location -o none

# Deploy ARM template
echo "Deploying template to resource group ${rg}..."
az deployment group create -n checklist$RANDOM -g $rg --template-file ./template.json --parameters \
    "checklistTech=aks" \
    "identityId=${id_id}" \
    "aciName=${aci_name}" \
    "serverName=${mysql_server_name}" \
    "administratorLogin=${mysql_server_user}" \
    "administratorLoginPassword=${mysql_server_password}"

# Optional: see containers created in the RG
az container list -g $rg -o table

# Optional: re-run fillgraphdb container to refresh the Graph query results
graph_aci_name="graph${suffix}"
graph_image="erjosito/checklist-fillgraphdb:1.0"
mysql_server_fqdn=$(az mysql server show -n $mysql_server_name -g $rg --query 'fullyQualifiedDomainName' -o tsv)
echo "Creating ACI ${graph_aci_name}..."
az container create -n $graph_aci_name -g $rg --assign-identity "$id_id" --image "$graph_image" --ip-address public --restart-policy OnFailure -o none -e \
    "MYSQL_PASSWORD=${mysql_server_password}" \
    "MYSQL_USER=${mysql_server_user}" \
    "MYSQL_FQDN=${mysql_server_fqdn}" \
    "WAIT_INTERVALS=6"

###########
# Cleanup #
###########

# Note the cleanup process doesnt delete the identity created, so that it can be leveraged for other checklist-based reviews
# az group delete $rg -y --no-wait