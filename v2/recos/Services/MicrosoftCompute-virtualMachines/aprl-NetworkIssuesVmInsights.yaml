name: aprl-NetworkIssuesVmInsights
title: Enable VM Insights
description: |-
  VM Insights monitors VM and scale set performance, health, running processes, and dependencies. It enhances the predictability of application performance and availability by pinpointing performance bottlenecks and network issues, and it clarifies if problems are related to other dependencies.
source:
  type: aprl
  file: azure-resources/Compute/virtualMachines/recommendations.yaml
  timestamp: July 24, 2024
resourceTypes:
- Microsoft.Compute/virtualMachines
severity: 2
labels:
  guid: b72214bb-e879-5f4b-b9cd-642db84f36f4
  area: Monitoring and Alerting
links: []
queries:
  arg: |
    // Azure Resource Graph Query
    // Check for VMs without Azure Monitoring Agent extension installed, missing Data Collection Rule or Data Collection Rule without performance enabled.
    Resources
    | where type == 'microsoft.compute/virtualmachines'
    | project idVm = tolower(id), name, tags
    | join kind=leftouter (
        InsightsResources
        | where type =~ "Microsoft.Insights/dataCollectionRuleAssociations" and id has "Microsoft.Compute/virtualMachines"
        | project idDcr = tolower(properties.dataCollectionRuleId), idVmDcr = tolower(substring(id, 0, indexof(id, "/providers/Microsoft.Insights/dataCollectionRuleAssociations/"))))
    on $left.idVm == $right.idVmDcr
    | join kind=leftouter (
        Resources
        | where type =~ "Microsoft.Insights/dataCollectionRules"
        | extend
            isPerformanceEnabled = iif(properties.dataSources.performanceCounters contains "Microsoft-InsightsMetrics" and properties.dataFlows contains "Microsoft-InsightsMetrics", true, false),
            isMapEnabled = iif(properties.dataSources.extensions contains "Microsoft-ServiceMap" and properties.dataSources.extensions contains "DependencyAgent" and properties.dataFlows contains "Microsoft-ServiceMap", true, false)//,
        | where isPerformanceEnabled or isMapEnabled
        | project dcrName = name, isPerformanceEnabled, isMapEnabled, idDcr = tolower(id))
    on $left.idDcr == $right.idDcr
    | join kind=leftouter (
        Resources
            | where type == 'microsoft.compute/virtualmachines/extensions' and (name contains 'AzureMonitorWindowsAgent' or name contains 'AzureMonitorLinuxAgent')
            | extend idVmExtension = tolower(substring(id, 0, indexof(id, '/extensions'))), extensionName = name)
    on $left.idVm == $right.idVmExtension
    | where isPerformanceEnabled != 1 or (extensionName != 'AzureMonitorWindowsAgent' and extensionName != 'AzureMonitorLinuxAgent')
    | project recommendationId = "b72214bb-e879-5f4b-b9cd-642db84f36f4", name, id = idVm, tags, param1 = strcat('MonitoringExtension:', extensionName), param2 = strcat('DataCollectionRuleId:', idDcr), param3 = strcat('isPerformanceEnabled:', isPerformanceEnabled)
