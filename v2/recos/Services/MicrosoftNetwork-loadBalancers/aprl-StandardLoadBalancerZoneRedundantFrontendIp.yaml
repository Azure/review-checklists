name: aprl-StandardLoadBalancerZoneRedundantFrontendIp
title: Ensure Standard Load Balancer is zone-redundant
description: |-
  In regions with Availability Zones, assigning a zone-redundant frontend IP to a Standard Load Balancer ensures continuous traffic distribution even if one availability zone fails, provided other healthy zones and backend instances are available to receive the traffic.
source:
  type: aprl
  file: azure-resources/Network/loadBalancers/recommendations.yaml
  timestamp: July 24, 2024
resourceTypes:
- Microsoft.Network/loadBalancers
severity: 0
labels:
  guid: 621dbc78-3745-4d32-8eac-9e65b27b7512
  area: High Availability
links: []
queries:
  arg: |
    // Azure Resource Graph Query
    // Find all LoadBalancers with with regional or zonal public IP Addresses
    resources
    | where type == "microsoft.network/loadbalancers"
    | where tolower(sku.name) != 'basic'
    | mv-expand feIPconfigs = properties.frontendIPConfigurations
    | extend
        feConfigName = (feIPconfigs.name),
        PrivateSubnetId = toupper(feIPconfigs.properties.subnet.id),
        PrivateIPZones = feIPconfigs.zones,
        PIPid = toupper(feIPconfigs.properties.publicIPAddress.id),
        JoinID = toupper(id)
    | where isnotempty(PrivateSubnetId)
    | where isnull(PrivateIPZones) or array_length(PrivateIPZones) < 2
    | project name, feConfigName, id
    | union (resources
        | where type == "microsoft.network/loadbalancers"
        | where tolower(sku.name) != 'basic'
        | mv-expand feIPconfigs = properties.frontendIPConfigurations
        | extend
            feConfigName = (feIPconfigs.name),
            PIPid = toupper(feIPconfigs.properties.publicIPAddress.id),
            JoinID = toupper(id)
        | where isnotempty(PIPid)
        | join kind=innerunique (
            resources
            | where type == "microsoft.network/publicipaddresses"
            | where isnull(zones) or array_length(zones) < 2
            | extend
                LBid = toupper(substring(properties.ipConfiguration.id, 0, indexof(properties.ipConfiguration.id, '/frontendIPConfigurations'))),
                InnerID = toupper(id)
        ) on $left.PIPid == $right.InnerID)
    | project recommendationId = "621dbc78-3745-4d32-8eac-9e65b27b7512", name, id, tags, param1="Zones: No Zone or Zonal", param2=strcat("Frontend IP Configuration:", " ", feConfigName)
